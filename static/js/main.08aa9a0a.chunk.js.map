{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","handleAlphabetSort","setState","ALPHABET","handleLengthSort","LENGTH","handleReverse","handleReset","this","displayGoods","goods","sort","firstGood","secondGood","localeCompare","length","reverse","getReorderedGoods","activeReset","className","type","cn","onClick","map","good","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,+FAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA0CE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,mBAAqB,WACnB,EAAKC,SAAS,CACZH,SAAUL,EAASS,YARzB,EAYEC,iBAAmB,WACjB,EAAKF,SAAS,CACZH,SAAUL,EAASW,UAdzB,EAkBEC,cAAgB,WACd,EAAKJ,UAAS,SAACL,GAAD,MAAY,CACxBC,YAAaD,EAAMC,gBApBzB,EAwBES,YAAc,WACZ,EAAKL,SAAS,CACZJ,YAAY,EACZC,SAAUL,EAASM,QA3BzB,4CA+BE,WACE,MAAiCQ,KAAKX,MAA9BE,EAAR,EAAQA,SAAUD,EAAlB,EAAkBA,WACZW,EA/DH,SACLC,EADK,GAGJ,IADCX,EACF,EADEA,SAAUD,EACZ,EADYA,WAGNW,EAAY,YAAOC,GAgBzB,OAdIX,IAAaL,EAASS,UACxBO,EAAMC,MAAK,SAACC,EAAWC,GAAZ,OAA2BD,EAAUE,cAAcD,MAG5Dd,IAAaL,EAASW,QACxBI,EAAaE,MACX,SAACC,EAAWC,GAAZ,OAA2BD,EAAUG,OAASF,EAAWE,UAIzDjB,GACFW,EAAaO,UAGRP,EA0CgBQ,CAAkBtB,EAAiB,CACtDI,WACAD,eAGIoB,EAAcpB,GAAcC,IAAaL,EAASM,KAExD,OACE,sBAAKmB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBAAkB,CAC9B,WAAYtB,IAAaL,EAASS,WAEpCmB,QAASd,KAAKP,mBALhB,iCAUA,wBACEmB,KAAK,SACLD,UAAWE,IAAG,iBAAkB,CAC9B,WAAYtB,IAAaL,EAASW,SAEpCiB,QAASd,KAAKJ,iBALhB,4BAUA,wBACEgB,KAAK,SACLD,UAAWE,IAAG,iBAAkB,CAC9B,YAAavB,IAEfwB,QAASd,KAAKF,cALhB,qBAUCY,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAASd,KAAKD,YAHhB,sBAUJ,6BACE,6BACGE,EAAac,KAAI,SAACC,GAAD,OAChB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,iBAvFtC,GAAyBC,aCzDzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.08aa9a0a.chunk.js","sourcesContent":["import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType;\n  isReversed: boolean;\n};\n\n// Use this function in the render method to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const displayGoods = [...goods];\n\n  if (sortType === SortType.ALPHABET) {\n    goods.sort((firstGood, secondGood) => firstGood.localeCompare(secondGood));\n  }\n\n  if (sortType === SortType.LENGTH) {\n    displayGoods.sort(\n      (firstGood, secondGood) => firstGood.length - secondGood.length,\n    );\n  }\n\n  if (isReversed) {\n    displayGoods.reverse();\n  }\n\n  return displayGoods;\n}\n\n// DON'T save goods to the state\ntype State = {\n  isReversed: boolean;\n  sortType: SortType;\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  handleAlphabetSort = () => {\n    this.setState({\n      sortType: SortType.ALPHABET,\n    });\n  };\n\n  handleLengthSort = () => {\n    this.setState({\n      sortType: SortType.LENGTH,\n    });\n  };\n\n  handleReverse = () => {\n    this.setState((state) => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  handleReset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render() {\n    const { sortType, isReversed } = this.state;\n    const displayGoods = getReorderedGoods(goodsFromServer, {\n      sortType,\n      isReversed,\n    });\n\n    const activeReset = isReversed || sortType !== SortType.NONE;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={cn('button is-info', {\n              'is-light': sortType !== SortType.ALPHABET,\n            })}\n            onClick={this.handleAlphabetSort}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={cn('button is-info', {\n              'is-light': sortType !== SortType.LENGTH,\n            })}\n            onClick={this.handleLengthSort}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={cn('button is-info', {\n              'is-light': !isReversed,\n            })}\n            onClick={this.handleReverse}\n          >\n            Reverse\n          </button>\n\n          {activeReset && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.handleReset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {displayGoods.map((good) => (\n              <li data-cy=\"Good\" key={good}>\n                {good}\n              </li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}